1. npx create-expo-app frontend
2. cd frontend
3. npx expo start (then exit)
4. npm install react-native-maps
5. Get API Key from Google Maps
    - AIzaSyCBZD28SfZeIxWtvqXyn_oRTu2NbQxfI5c
6. Follow steps from react-native-maps github
    - MapView, Marker, PROVIDER_GOOGLE
7. Go to the Routes API from Google, and translate the curl request to fetch, while putting your API Key
8. Decode the encodedPolyline by using import polyline from '@mapbox/polyline', also install it;
9. Create <Polyline /> component while passing the correct attributes
10. npm install react-native-google-maps-directions
11. Do backend for orders, MUST use command "python manage.py runserver 0.0.0.0:8000"
12. Download ngrok to get temporary HTTPS server. 
    - Use command "ngrok http 8000"
    - Copy and paste the "https://...." Forwarding link, then test the endpoint out in postman
13. Use that as the fetch for the api
14. NOTE, here I must use an anonymous arrow function to wrap the function call to pass parameters



NOTE!! One error that could happen, is when leaving/restarting the app, the order could still be going on, and leaving would cause
    the order to completely be unavailable!

Driver:
    * Geolocation, always location, and needs to update the customer about their whereabouts, along with approximate time
    * Cashout
    * Account Info
    * Chat
    * Ensuring no "scamming"
    * Need to finish the "complete order"

Customer:
    * Needs a "Waiting for a Driver" screen
    * Then when their order has been accepted by a driver, both the driver and customer needs some information about each other
    * Customer needs to recieve real-time updates on the driver's location, alongside current wait time
    * Needs to have a "balance" screen to "load" money into the app.
    * Cancel an order button


ToDo:
1.* Profile View for Driver and Customer (Must include image)
2. (Done) Customer app/login and create
3. (Done) Tracking and updating Driver coordinates every 10 seconds, (needed useRef and more useState's)
4. Sending customer profile as response to the driver, and notifying the customer of the driver
    - Now I just need to send responses to the both of them
    - Sent response to the driver, now the customer needs to ping the backend every 10 seconds, to get the location of the driver
5. Transfer balance of customer to the driver, and ending ride for both after the driver says they are done
6. Finished With App!!! (After Styling is done)